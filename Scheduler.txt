[ 노드에 라벨 추가 ]
kubectl label nodes "노드명" "추가할 라벨"

[ 노드에 추가한 라벨 삭제 ]
kubectl label nodes "노드명" "추가할 라벨"-

[ nodeSelector 방식 : 키-값 라벨을 이용해 해당 노드에 포드 할당시 ] = 라벨을 갖는 노드중 하나가 선택
spec :
	nodeSelector :
 		"해당라벨"

[ nodeaffinity-required 방식 ]
Value 값 하나만 만족하면 사용 가능

[ pod Afiinity 방식 ] 
==> 위 방식 모두 노드 스코어링(preferred ~ ) : weight로 중요 가중치 조절(1~100)
++ 옵션
requiredDuringSchedulingIgnoredDuringExecution : 반드시 만족해야만 하는 제약 조건
preferredDuringSchedulingIgnoredDuringExecution : 키-값 조건을 반드시 만족할 필요는 없으며, 해당 노드가 있다면 그 노드를 좀더 선호
topologyKey : 해당 라벨을 가지는 토폴로지 범위의 노드를 선택
( 모든 토폴로지는 반드시 하나의 노드로만 구성 )	

[ Taitans ] - 노드에 포드가 스케줄링 되는것을 막음
키=값 형태
ex) kubectl taint nodes "노드명" key:effect

[ taitan 효과 종류 ]
1) NoExecute : 다른 노드로 이동
2) NoSchedule : 새로운 포드의 스케줄링 방지


[ tolerations ]
- tolertaions : 
  operatior : Exsists == 모든 종류의 taint를 용인

  tolertaions : 
- key : my-key           == 키의 이름이 my-key인 모든 taint에 대해 용인
  operatior :  Exsists 

  tolertaions : 
- key : my-key 
  effect : NoExecute == 키의 이름이 my-key이고, taint 효과가 noexecute인 taint에 대해 용인
  operatior :  Exsists 


------------------------------------------------------------
[ cordon ] = Noschedule 효과가 있는 Taint를 노드에 추가, 이미 실행중인 포드는 종료 x 
kubectl cordon "노드명"  : 해당 노드에 더 이상 포드가 스케줄링 되지않음 ( ** 단 이미 실행중인 포드는 종료 X )

kubectl uncordon "노드명" : 설정 해제

[ drain ] = 이미 실행중인 포드를 다른 노드로 옮겨가도록 포드를 모두 종료시키는 퇴거 수행

[ poddisruptionbudgets ] == pdb
커스텀 스케줄러
